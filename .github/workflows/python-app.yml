# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.8.5"
  POETRY_URL: https://install.python-poetry.org

jobs:
  setup-env:
  
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            windows: 1
          - os: ubuntu-latest
            ubuntu: 1
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      id: setup_python

    - if: ${{ matrix.windows }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.windows }}
      name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\work\iac-labs\iac-labs\example-app\.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - if: ${{ matrix.windows }}
      name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - if: ${{ matrix.ubuntu }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.ubuntu }}
      name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}

    - if: ${{ matrix.ubuntu }}
      name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Install Poetry ${{ env.POETRY_VERSION }}
      run: |
        curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - if: ${{ matrix.ubuntu }}
      name: Install Dependencies
      run: poetry install --no-interaction --no-root
    - if: ${{ matrix.windows }}
      name: Install Dependencies
      run: /c/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry install --no-interaction --no-root

  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            windows: 1
          - os: ubuntu-latest
            ubuntu: 1
    runs-on: ${{ matrix.os }}
    needs: 
    - lint
    - formatter
    - security

    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      id: setup_python

    - if: ${{ matrix.windows }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.windows }}
      name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: .venv  # Adjust path to match your venv location
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - if: ${{ matrix.windows }}
      name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - if: ${{ matrix.ubuntu }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.ubuntu }}
      name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}

    - if: ${{ matrix.ubuntu }}
      name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

    - if: ${{ matrix.ubuntu }}
      name: Unit tests
      run: poetry run task test
    - if: ${{ matrix.windows }}
      name: Unit tests
      run: /c/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry run task test

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            windows: 1
          - os: ubuntu-latest
            ubuntu: 1
    runs-on: ${{ matrix.os }}

    needs: setup-env
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      id: setup_python

    - if: ${{ matrix.windows }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.windows }}
      name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: .venv  # Adjust path to match your venv location
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - if: ${{ matrix.windows }}
      name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - if: ${{ matrix.ubuntu }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.ubuntu }}
      name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}

    - if: ${{ matrix.ubuntu }}
      name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

    - if: ${{ matrix.ubuntu }}
      name:  Linter tests
      run: poetry run task lint
    - if: ${{ matrix.windows }}
      name:  Linter tests
      run: /c/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry run task lint

  formatter:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            windows: 1
          - os: ubuntu-latest
            ubuntu: 1
    runs-on: ${{ matrix.os }}

    needs: setup-env
    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      id: setup_python

    - if: ${{ matrix.windows }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.windows }}
      name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: .venv  # Adjust path to match your venv location
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - if: ${{ matrix.windows }}
      name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - if: ${{ matrix.ubuntu }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.ubuntu }}
      name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}

    - if: ${{ matrix.ubuntu }}
      name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

    - if: ${{ matrix.ubuntu }}
      name: Formatter
      run: poetry run task formatter
    - if: ${{ matrix.windows }}
      name: Formatter
      run: /c/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry run task formatter
        
  security:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            windows: 1
          - os: ubuntu-latest
            ubuntu: 1
    runs-on: ${{ matrix.os }}
    needs: setup-env

    defaults:
      run:
        shell: bash
        working-directory: ./example-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      id: setup_python

    - if: ${{ matrix.windows }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.windows }}
      name: Cache Python virtual environment
      uses: actions/cache@v3
      with:
        path: .venv  # Adjust path to match your venv location
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - if: ${{ matrix.windows }}
      name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\pip\cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - if: ${{ matrix.ubuntu }}
      name: Cache Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

    - if: ${{ matrix.ubuntu }}
      name: Cache Packages
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}

    - if: ${{ matrix.ubuntu }}
      name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

    - if: ${{ matrix.ubuntu }}
      name: Security tests
      run: poetry run task security
    - if: ${{ matrix.windows }}
      name: Security tests
      run: /c/Users/runneradmin/AppData/Roaming/Python/Scripts/poetry run task security
