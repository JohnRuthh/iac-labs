# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  environment:
  
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

      
  unit-tests:
    needs: environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Unit tests
      run: |
        poetry run task test
  linter:
    needs: environment
    runs-on: ubuntu-latest
    steps:
    - name: Linter tests
      run: |
        poetry run task lint
  formatter:
    needs: environment
    runs-on: ubuntu-latest
    steps:
    - name: Formatter
      run: |
        poetry run task formatter
  security:
    needs: environment
    runs-on: ubuntu-latest
    steps:
    - name: Security tests
      run: |
        poetry run task security
